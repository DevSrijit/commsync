services:
  discord-middleware:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: discord-middleware
    restart: unless-stopped
    ports:
      - "3081:3000"
    environment:
      - PORT=3000
      - DATABASE_URL=${DATABASE_URL}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - MAX_CONCURRENT_CONNECTIONS=${MAX_CONCURRENT_CONNECTIONS:-100}
      - SHARD_COUNT=${SHARD_COUNT:-2}
      - NUM_WORKERS=${NUM_WORKERS:-2}
      - NODE_ENV=production
    volumes:
      - ./logs:/app/logs
    networks:
      - commsync-network
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]  # Use the container's API port
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - commsync-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-remote-write-receiver'
      - '--enable-feature=remote-write-receiver'
    depends_on:
      - discord-middleware

volumes:
  prometheus_data:

networks:
  commsync-network:
    driver: bridge 